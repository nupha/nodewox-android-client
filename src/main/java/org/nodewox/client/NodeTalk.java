// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: talk.proto

package org.nodewox.client;

public final class NodeTalk {
  private NodeTalk() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VariantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.Variant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 int_val = 1;</code>
     */
    long getIntVal();

    /**
     * <code>optional double num_val = 2;</code>
     */
    double getNumVal();

    /**
     * <code>optional bool bool_val = 3;</code>
     */
    boolean getBoolVal();

    /**
     * <code>optional bytes bin_val = 4;</code>
     */
    com.google.protobuf.ByteString getBinVal();

    /**
     * <code>optional string str_val = 5;</code>
     */
    java.lang.String getStrVal();
    /**
     * <code>optional string str_val = 5;</code>
     */
    com.google.protobuf.ByteString
        getStrValBytes();

    /**
     * <pre>
     * unix time
     * </pre>
     *
     * <code>optional int64 time_val = 6;</code>
     */
    long getTimeVal();

    public org.nodewox.client.NodeTalk.Variant.ValueCase getValueCase();
  }
  /**
   * <pre>
   * variant value
   * </pre>
   *
   * Protobuf type {@code thinese.Variant}
   */
  public  static final class Variant extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.Variant)
      VariantOrBuilder {
    // Use Variant.newBuilder() to construct.
    private Variant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Variant() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Variant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              valueCase_ = 1;
              value_ = input.readInt64();
              break;
            }
            case 17: {
              valueCase_ = 2;
              value_ = input.readDouble();
              break;
            }
            case 24: {
              valueCase_ = 3;
              value_ = input.readBool();
              break;
            }
            case 34: {
              valueCase_ = 4;
              value_ = input.readBytes();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 5;
              value_ = s;
              break;
            }
            case 48: {
              valueCase_ = 6;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Variant_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Variant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.Variant.class, org.nodewox.client.NodeTalk.Variant.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      INT_VAL(1),
      NUM_VAL(2),
      BOOL_VAL(3),
      BIN_VAL(4),
      STR_VAL(5),
      TIME_VAL(6),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return INT_VAL;
          case 2: return NUM_VAL;
          case 3: return BOOL_VAL;
          case 4: return BIN_VAL;
          case 5: return STR_VAL;
          case 6: return TIME_VAL;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int INT_VAL_FIELD_NUMBER = 1;
    /**
     * <code>optional int64 int_val = 1;</code>
     */
    public long getIntVal() {
      if (valueCase_ == 1) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int NUM_VAL_FIELD_NUMBER = 2;
    /**
     * <code>optional double num_val = 2;</code>
     */
    public double getNumVal() {
      if (valueCase_ == 2) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }

    public static final int BOOL_VAL_FIELD_NUMBER = 3;
    /**
     * <code>optional bool bool_val = 3;</code>
     */
    public boolean getBoolVal() {
      if (valueCase_ == 3) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }

    public static final int BIN_VAL_FIELD_NUMBER = 4;
    /**
     * <code>optional bytes bin_val = 4;</code>
     */
    public com.google.protobuf.ByteString getBinVal() {
      if (valueCase_ == 4) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int STR_VAL_FIELD_NUMBER = 5;
    /**
     * <code>optional string str_val = 5;</code>
     */
    public java.lang.String getStrVal() {
      java.lang.Object ref = "";
      if (valueCase_ == 5) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 5) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string str_val = 5;</code>
     */
    public com.google.protobuf.ByteString
        getStrValBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 5) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 5) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_VAL_FIELD_NUMBER = 6;
    /**
     * <pre>
     * unix time
     * </pre>
     *
     * <code>optional int64 time_val = 6;</code>
     */
    public long getTimeVal() {
      if (valueCase_ == 6) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeInt64(
            1, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 2) {
        output.writeDouble(
            2, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 3) {
        output.writeBool(
            3, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 4) {
        output.writeBytes(
            4, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) value_));
      }
      if (valueCase_ == 5) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, value_);
      }
      if (valueCase_ == 6) {
        output.writeInt64(
            6, (long)((java.lang.Long) value_));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              1, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              2, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              3, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              4, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) value_));
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              6, (long)((java.lang.Long) value_));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.Variant)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.Variant other = (org.nodewox.client.NodeTalk.Variant) obj;

      boolean result = true;
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 1:
          result = result && (getIntVal()
              == other.getIntVal());
          break;
        case 2:
          result = result && (
              java.lang.Double.doubleToLongBits(getNumVal())
              == java.lang.Double.doubleToLongBits(
                  other.getNumVal()));
          break;
        case 3:
          result = result && (getBoolVal()
              == other.getBoolVal());
          break;
        case 4:
          result = result && getBinVal()
              .equals(other.getBinVal());
          break;
        case 5:
          result = result && getStrVal()
              .equals(other.getStrVal());
          break;
        case 6:
          result = result && (getTimeVal()
              == other.getTimeVal());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + INT_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIntVal());
          break;
        case 2:
          hash = (37 * hash) + NUM_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getNumVal()));
          break;
        case 3:
          hash = (37 * hash) + BOOL_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolVal());
          break;
        case 4:
          hash = (37 * hash) + BIN_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getBinVal().hashCode();
          break;
        case 5:
          hash = (37 * hash) + STR_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getStrVal().hashCode();
          break;
        case 6:
          hash = (37 * hash) + TIME_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimeVal());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Variant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Variant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Variant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.Variant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * variant value
     * </pre>
     *
     * Protobuf type {@code thinese.Variant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.Variant)
        org.nodewox.client.NodeTalk.VariantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Variant_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Variant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.Variant.class, org.nodewox.client.NodeTalk.Variant.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.Variant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Variant_descriptor;
      }

      public org.nodewox.client.NodeTalk.Variant getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.Variant build() {
        org.nodewox.client.NodeTalk.Variant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.Variant buildPartial() {
        org.nodewox.client.NodeTalk.Variant result = new org.nodewox.client.NodeTalk.Variant(this);
        if (valueCase_ == 1) {
          result.value_ = value_;
        }
        if (valueCase_ == 2) {
          result.value_ = value_;
        }
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        if (valueCase_ == 5) {
          result.value_ = value_;
        }
        if (valueCase_ == 6) {
          result.value_ = value_;
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.Variant) {
          return mergeFrom((org.nodewox.client.NodeTalk.Variant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.Variant other) {
        if (other == org.nodewox.client.NodeTalk.Variant.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case INT_VAL: {
            setIntVal(other.getIntVal());
            break;
          }
          case NUM_VAL: {
            setNumVal(other.getNumVal());
            break;
          }
          case BOOL_VAL: {
            setBoolVal(other.getBoolVal());
            break;
          }
          case BIN_VAL: {
            setBinVal(other.getBinVal());
            break;
          }
          case STR_VAL: {
            valueCase_ = 5;
            value_ = other.value_;
            onChanged();
            break;
          }
          case TIME_VAL: {
            setTimeVal(other.getTimeVal());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.Variant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.Variant) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>optional int64 int_val = 1;</code>
       */
      public long getIntVal() {
        if (valueCase_ == 1) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <code>optional int64 int_val = 1;</code>
       */
      public Builder setIntVal(long value) {
        valueCase_ = 1;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int_val = 1;</code>
       */
      public Builder clearIntVal() {
        if (valueCase_ == 1) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional double num_val = 2;</code>
       */
      public double getNumVal() {
        if (valueCase_ == 2) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }
      /**
       * <code>optional double num_val = 2;</code>
       */
      public Builder setNumVal(double value) {
        valueCase_ = 2;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double num_val = 2;</code>
       */
      public Builder clearNumVal() {
        if (valueCase_ == 2) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional bool bool_val = 3;</code>
       */
      public boolean getBoolVal() {
        if (valueCase_ == 3) {
          return (java.lang.Boolean) value_;
        }
        return false;
      }
      /**
       * <code>optional bool bool_val = 3;</code>
       */
      public Builder setBoolVal(boolean value) {
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_val = 3;</code>
       */
      public Builder clearBoolVal() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional bytes bin_val = 4;</code>
       */
      public com.google.protobuf.ByteString getBinVal() {
        if (valueCase_ == 4) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>optional bytes bin_val = 4;</code>
       */
      public Builder setBinVal(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bin_val = 4;</code>
       */
      public Builder clearBinVal() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional string str_val = 5;</code>
       */
      public java.lang.String getStrVal() {
        java.lang.Object ref = "";
        if (valueCase_ == 5) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 5) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string str_val = 5;</code>
       */
      public com.google.protobuf.ByteString
          getStrValBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 5) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 5) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string str_val = 5;</code>
       */
      public Builder setStrVal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 5;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string str_val = 5;</code>
       */
      public Builder clearStrVal() {
        if (valueCase_ == 5) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string str_val = 5;</code>
       */
      public Builder setStrValBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 5;
        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * unix time
       * </pre>
       *
       * <code>optional int64 time_val = 6;</code>
       */
      public long getTimeVal() {
        if (valueCase_ == 6) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <pre>
       * unix time
       * </pre>
       *
       * <code>optional int64 time_val = 6;</code>
       */
      public Builder setTimeVal(long value) {
        valueCase_ = 6;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unix time
       * </pre>
       *
       * <code>optional int64 time_val = 6;</code>
       */
      public Builder clearTimeVal() {
        if (valueCase_ == 6) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.Variant)
    }

    // @@protoc_insertion_point(class_scope:thinese.Variant)
    private static final org.nodewox.client.NodeTalk.Variant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.Variant();
    }

    public static org.nodewox.client.NodeTalk.Variant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Variant>
        PARSER = new com.google.protobuf.AbstractParser<Variant>() {
      public Variant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Variant(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Variant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Variant> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.Variant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.Pair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    org.nodewox.client.NodeTalk.Variant getValue();
    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder();
  }
  /**
   * <pre>
   * a key-value pair
   * </pre>
   *
   * Protobuf type {@code thinese.Pair}
   */
  public  static final class Pair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.Pair)
      PairOrBuilder {
    // Use Pair.newBuilder() to construct.
    private Pair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pair() {
      key_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Pair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              org.nodewox.client.NodeTalk.Variant.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.nodewox.client.NodeTalk.Variant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Pair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Pair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.Pair.class, org.nodewox.client.NodeTalk.Pair.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>optional string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>optional string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private org.nodewox.client.NodeTalk.Variant value_;
    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    public org.nodewox.client.NodeTalk.Variant getValue() {
      return value_ == null ? org.nodewox.client.NodeTalk.Variant.getDefaultInstance() : value_;
    }
    /**
     * <code>optional .thinese.Variant value = 2;</code>
     */
    public org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.Pair)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.Pair other = (org.nodewox.client.NodeTalk.Pair) obj;

      boolean result = true;
      result = result && getKey()
          .equals(other.getKey());
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Pair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Pair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Pair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.Pair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a key-value pair
     * </pre>
     *
     * Protobuf type {@code thinese.Pair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.Pair)
        org.nodewox.client.NodeTalk.PairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Pair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Pair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.Pair.class, org.nodewox.client.NodeTalk.Pair.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.Pair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = "";

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Pair_descriptor;
      }

      public org.nodewox.client.NodeTalk.Pair getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.Pair.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.Pair build() {
        org.nodewox.client.NodeTalk.Pair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.Pair buildPartial() {
        org.nodewox.client.NodeTalk.Pair result = new org.nodewox.client.NodeTalk.Pair(this);
        result.key_ = key_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.Pair) {
          return mergeFrom((org.nodewox.client.NodeTalk.Pair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.Pair other) {
        if (other == org.nodewox.client.NodeTalk.Pair.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.Pair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.Pair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private org.nodewox.client.NodeTalk.Variant value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> valueBuilder_;
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public org.nodewox.client.NodeTalk.Variant getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? org.nodewox.client.NodeTalk.Variant.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public Builder setValue(org.nodewox.client.NodeTalk.Variant value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public Builder setValue(
          org.nodewox.client.NodeTalk.Variant.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public Builder mergeValue(org.nodewox.client.NodeTalk.Variant value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              org.nodewox.client.NodeTalk.Variant.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public org.nodewox.client.NodeTalk.Variant.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      public org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              org.nodewox.client.NodeTalk.Variant.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>optional .thinese.Variant value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.Pair)
    }

    // @@protoc_insertion_point(class_scope:thinese.Pair)
    private static final org.nodewox.client.NodeTalk.Pair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.Pair();
    }

    public static org.nodewox.client.NodeTalk.Pair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pair>
        PARSER = new com.google.protobuf.AbstractParser<Pair>() {
      public Pair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Pair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pair> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.Pair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.VariantArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    java.util.List<org.nodewox.client.NodeTalk.Variant> 
        getValueList();
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    org.nodewox.client.NodeTalk.Variant getValue(int index);
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    java.util.List<? extends org.nodewox.client.NodeTalk.VariantOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code thinese.VariantArray}
   */
  public  static final class VariantArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.VariantArray)
      VariantArrayOrBuilder {
    // Use VariantArray.newBuilder() to construct.
    private VariantArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VariantArray() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<org.nodewox.client.NodeTalk.Variant>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(
                  input.readMessage(org.nodewox.client.NodeTalk.Variant.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_VariantArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_VariantArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.VariantArray.class, org.nodewox.client.NodeTalk.VariantArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<org.nodewox.client.NodeTalk.Variant> value_;
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    public java.util.List<org.nodewox.client.NodeTalk.Variant> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    public java.util.List<? extends org.nodewox.client.NodeTalk.VariantOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    public org.nodewox.client.NodeTalk.Variant getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .thinese.Variant value = 1;</code>
     */
    public org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.VariantArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.VariantArray other = (org.nodewox.client.NodeTalk.VariantArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.VariantArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.VariantArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.VariantArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.VariantArray)
        org.nodewox.client.NodeTalk.VariantArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_VariantArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_VariantArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.VariantArray.class, org.nodewox.client.NodeTalk.VariantArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.VariantArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_VariantArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.VariantArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.VariantArray build() {
        org.nodewox.client.NodeTalk.VariantArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.VariantArray buildPartial() {
        org.nodewox.client.NodeTalk.VariantArray result = new org.nodewox.client.NodeTalk.VariantArray(this);
        int from_bitField0_ = bitField0_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.VariantArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.VariantArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.VariantArray other) {
        if (other == org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance()) return this;
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.VariantArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.VariantArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.nodewox.client.NodeTalk.Variant> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<org.nodewox.client.NodeTalk.Variant>(value_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> valueBuilder_;

      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public java.util.List<org.nodewox.client.NodeTalk.Variant> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Variant getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder setValue(
          int index, org.nodewox.client.NodeTalk.Variant value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder setValue(
          int index, org.nodewox.client.NodeTalk.Variant.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder addValue(org.nodewox.client.NodeTalk.Variant value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder addValue(
          int index, org.nodewox.client.NodeTalk.Variant value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder addValue(
          org.nodewox.client.NodeTalk.Variant.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder addValue(
          int index, org.nodewox.client.NodeTalk.Variant.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.nodewox.client.NodeTalk.Variant> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Variant.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.VariantOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public java.util.List<? extends org.nodewox.client.NodeTalk.VariantOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Variant.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Variant.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
      }
      /**
       * <code>repeated .thinese.Variant value = 1;</code>
       */
      public java.util.List<org.nodewox.client.NodeTalk.Variant.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.VariantArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.VariantArray)
    private static final org.nodewox.client.NodeTalk.VariantArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.VariantArray();
    }

    public static org.nodewox.client.NodeTalk.VariantArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantArray>
        PARSER = new com.google.protobuf.AbstractParser<VariantArray>() {
      public VariantArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariantArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VariantArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.VariantArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StrArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.StrArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string value = 1;</code>
     */
    java.util.List<java.lang.String>
        getValueList();
    /**
     * <code>repeated string value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 1;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 1;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);
  }
  /**
   * Protobuf type {@code thinese.StrArray}
   */
  public  static final class StrArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.StrArray)
      StrArrayOrBuilder {
    // Use StrArray.newBuilder() to construct.
    private StrArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StrArray() {
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StrArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = value_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_StrArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_StrArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.StrArray.class, org.nodewox.client.NodeTalk.StrArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < value_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, value_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += computeStringSizeNoTag(value_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.StrArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.StrArray other = (org.nodewox.client.NodeTalk.StrArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.StrArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.StrArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.StrArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.StrArray)
        org.nodewox.client.NodeTalk.StrArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_StrArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_StrArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.StrArray.class, org.nodewox.client.NodeTalk.StrArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.StrArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_StrArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.StrArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.StrArray build() {
        org.nodewox.client.NodeTalk.StrArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.StrArray buildPartial() {
        org.nodewox.client.NodeTalk.StrArray result = new org.nodewox.client.NodeTalk.StrArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = value_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.StrArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.StrArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.StrArray other) {
        if (other == org.nodewox.client.NodeTalk.StrArray.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.StrArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.StrArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.StrArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.StrArray)
    private static final org.nodewox.client.NodeTalk.StrArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.StrArray();
    }

    public static org.nodewox.client.NodeTalk.StrArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StrArray>
        PARSER = new com.google.protobuf.AbstractParser<StrArray>() {
      public StrArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StrArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StrArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StrArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.StrArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.IntArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 value = 1;</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 1;</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code thinese.IntArray}
   */
  public  static final class IntArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.IntArray)
      IntArrayOrBuilder {
    // Use IntArray.newBuilder() to construct.
    private IntArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IntArray() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IntArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_IntArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_IntArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.IntArray.class, org.nodewox.client.NodeTalk.IntArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 1;</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64NoTag(value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.IntArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.IntArray other = (org.nodewox.client.NodeTalk.IntArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.IntArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.IntArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.IntArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.IntArray)
        org.nodewox.client.NodeTalk.IntArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_IntArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_IntArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.IntArray.class, org.nodewox.client.NodeTalk.IntArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.IntArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_IntArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.IntArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.IntArray build() {
        org.nodewox.client.NodeTalk.IntArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.IntArray buildPartial() {
        org.nodewox.client.NodeTalk.IntArray result = new org.nodewox.client.NodeTalk.IntArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.IntArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.IntArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.IntArray other) {
        if (other == org.nodewox.client.NodeTalk.IntArray.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.IntArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.IntArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.IntArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.IntArray)
    private static final org.nodewox.client.NodeTalk.IntArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.IntArray();
    }

    public static org.nodewox.client.NodeTalk.IntArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntArray>
        PARSER = new com.google.protobuf.AbstractParser<IntArray>() {
      public IntArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IntArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IntArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IntArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.IntArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NumArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.NumArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double value = 1;</code>
     */
    java.util.List<java.lang.Double> getValueList();
    /**
     * <code>repeated double value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated double value = 1;</code>
     */
    double getValue(int index);
  }
  /**
   * Protobuf type {@code thinese.NumArray}
   */
  public  static final class NumArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.NumArray)
      NumArrayOrBuilder {
    // Use NumArray.newBuilder() to construct.
    private NumArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NumArray() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NumArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_NumArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_NumArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.NumArray.class, org.nodewox.client.NodeTalk.NumArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> value_;
    /**
     * <code>repeated double value = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated double value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated double value = 1;</code>
     */
    public double getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeDoubleNoTag(value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.NumArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.NumArray other = (org.nodewox.client.NodeTalk.NumArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.NumArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.NumArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.NumArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.NumArray)
        org.nodewox.client.NodeTalk.NumArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_NumArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_NumArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.NumArray.class, org.nodewox.client.NodeTalk.NumArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.NumArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_NumArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.NumArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.NumArray build() {
        org.nodewox.client.NodeTalk.NumArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.NumArray buildPartial() {
        org.nodewox.client.NodeTalk.NumArray result = new org.nodewox.client.NodeTalk.NumArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.NumArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.NumArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.NumArray other) {
        if (other == org.nodewox.client.NodeTalk.NumArray.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.NumArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.NumArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Double>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public Builder setValue(
          int index, double value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public Builder addValue(double value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.NumArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.NumArray)
    private static final org.nodewox.client.NodeTalk.NumArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.NumArray();
    }

    public static org.nodewox.client.NodeTalk.NumArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NumArray>
        PARSER = new com.google.protobuf.AbstractParser<NumArray>() {
      public NumArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NumArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NumArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NumArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.NumArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoolArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.BoolArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bool value = 1;</code>
     */
    java.util.List<java.lang.Boolean> getValueList();
    /**
     * <code>repeated bool value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated bool value = 1;</code>
     */
    boolean getValue(int index);
  }
  /**
   * Protobuf type {@code thinese.BoolArray}
   */
  public  static final class BoolArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.BoolArray)
      BoolArrayOrBuilder {
    // Use BoolArray.newBuilder() to construct.
    private BoolArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BoolArray() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BoolArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readBool());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_BoolArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_BoolArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.BoolArray.class, org.nodewox.client.NodeTalk.BoolArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Boolean> value_;
    /**
     * <code>repeated bool value = 1;</code>
     */
    public java.util.List<java.lang.Boolean>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated bool value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated bool value = 1;</code>
     */
    public boolean getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeBoolNoTag(value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.BoolArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.BoolArray other = (org.nodewox.client.NodeTalk.BoolArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.BoolArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.BoolArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.BoolArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.BoolArray)
        org.nodewox.client.NodeTalk.BoolArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_BoolArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_BoolArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.BoolArray.class, org.nodewox.client.NodeTalk.BoolArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.BoolArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_BoolArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.BoolArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.BoolArray build() {
        org.nodewox.client.NodeTalk.BoolArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.BoolArray buildPartial() {
        org.nodewox.client.NodeTalk.BoolArray result = new org.nodewox.client.NodeTalk.BoolArray(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.BoolArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.BoolArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.BoolArray other) {
        if (other == org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.BoolArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.BoolArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Boolean> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Boolean>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public java.util.List<java.lang.Boolean>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public boolean getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public Builder setValue(
          int index, boolean value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public Builder addValue(boolean value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool value = 1;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.BoolArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.BoolArray)
    private static final org.nodewox.client.NodeTalk.BoolArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.BoolArray();
    }

    public static org.nodewox.client.NodeTalk.BoolArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoolArray>
        PARSER = new com.google.protobuf.AbstractParser<BoolArray>() {
      public BoolArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BoolArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BoolArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoolArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.BoolArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PairArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.PairArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    java.util.List<org.nodewox.client.NodeTalk.Pair> 
        getValueList();
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    org.nodewox.client.NodeTalk.Pair getValue(int index);
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    java.util.List<? extends org.nodewox.client.NodeTalk.PairOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    org.nodewox.client.NodeTalk.PairOrBuilder getValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code thinese.PairArray}
   */
  public  static final class PairArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.PairArray)
      PairArrayOrBuilder {
    // Use PairArray.newBuilder() to construct.
    private PairArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PairArray() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PairArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<org.nodewox.client.NodeTalk.Pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(
                  input.readMessage(org.nodewox.client.NodeTalk.Pair.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_PairArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_PairArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.PairArray.class, org.nodewox.client.NodeTalk.PairArray.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<org.nodewox.client.NodeTalk.Pair> value_;
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    public java.util.List<org.nodewox.client.NodeTalk.Pair> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    public java.util.List<? extends org.nodewox.client.NodeTalk.PairOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    public org.nodewox.client.NodeTalk.Pair getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .thinese.Pair value = 1;</code>
     */
    public org.nodewox.client.NodeTalk.PairOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.PairArray)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.PairArray other = (org.nodewox.client.NodeTalk.PairArray) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.PairArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.PairArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code thinese.PairArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.PairArray)
        org.nodewox.client.NodeTalk.PairArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_PairArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_PairArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.PairArray.class, org.nodewox.client.NodeTalk.PairArray.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.PairArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_PairArray_descriptor;
      }

      public org.nodewox.client.NodeTalk.PairArray getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.PairArray build() {
        org.nodewox.client.NodeTalk.PairArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.PairArray buildPartial() {
        org.nodewox.client.NodeTalk.PairArray result = new org.nodewox.client.NodeTalk.PairArray(this);
        int from_bitField0_ = bitField0_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.PairArray) {
          return mergeFrom((org.nodewox.client.NodeTalk.PairArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.PairArray other) {
        if (other == org.nodewox.client.NodeTalk.PairArray.getDefaultInstance()) return this;
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.PairArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.PairArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.nodewox.client.NodeTalk.Pair> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<org.nodewox.client.NodeTalk.Pair>(value_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.nodewox.client.NodeTalk.Pair, org.nodewox.client.NodeTalk.Pair.Builder, org.nodewox.client.NodeTalk.PairOrBuilder> valueBuilder_;

      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public java.util.List<org.nodewox.client.NodeTalk.Pair> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Pair getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder setValue(
          int index, org.nodewox.client.NodeTalk.Pair value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder setValue(
          int index, org.nodewox.client.NodeTalk.Pair.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder addValue(org.nodewox.client.NodeTalk.Pair value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder addValue(
          int index, org.nodewox.client.NodeTalk.Pair value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder addValue(
          org.nodewox.client.NodeTalk.Pair.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder addValue(
          int index, org.nodewox.client.NodeTalk.Pair.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends org.nodewox.client.NodeTalk.Pair> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Pair.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.PairOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public java.util.List<? extends org.nodewox.client.NodeTalk.PairOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Pair.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            org.nodewox.client.NodeTalk.Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Pair.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, org.nodewox.client.NodeTalk.Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .thinese.Pair value = 1;</code>
       */
      public java.util.List<org.nodewox.client.NodeTalk.Pair.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.nodewox.client.NodeTalk.Pair, org.nodewox.client.NodeTalk.Pair.Builder, org.nodewox.client.NodeTalk.PairOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.nodewox.client.NodeTalk.Pair, org.nodewox.client.NodeTalk.Pair.Builder, org.nodewox.client.NodeTalk.PairOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.PairArray)
    }

    // @@protoc_insertion_point(class_scope:thinese.PairArray)
    private static final org.nodewox.client.NodeTalk.PairArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.PairArray();
    }

    public static org.nodewox.client.NodeTalk.PairArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PairArray>
        PARSER = new com.google.protobuf.AbstractParser<PairArray>() {
      public PairArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PairArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PairArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PairArray> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.PairArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.Packet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * from node-id
     * </pre>
     *
     * <code>optional uint32 src = 1;</code>
     */
    int getSrc();

    /**
     * <pre>
     * from group
     * </pre>
     *
     * <code>optional uint32 gid = 2;</code>
     */
    int getGid();

    /**
     * <code>optional .thinese.Variant var_val = 5;</code>
     */
    org.nodewox.client.NodeTalk.Variant getVarVal();
    /**
     * <code>optional .thinese.Variant var_val = 5;</code>
     */
    org.nodewox.client.NodeTalk.VariantOrBuilder getVarValOrBuilder();

    /**
     * <code>optional .thinese.IntArray int_array = 6;</code>
     */
    org.nodewox.client.NodeTalk.IntArray getIntArray();
    /**
     * <code>optional .thinese.IntArray int_array = 6;</code>
     */
    org.nodewox.client.NodeTalk.IntArrayOrBuilder getIntArrayOrBuilder();

    /**
     * <code>optional .thinese.NumArray num_array = 7;</code>
     */
    org.nodewox.client.NodeTalk.NumArray getNumArray();
    /**
     * <code>optional .thinese.NumArray num_array = 7;</code>
     */
    org.nodewox.client.NodeTalk.NumArrayOrBuilder getNumArrayOrBuilder();

    /**
     * <code>optional .thinese.StrArray str_array = 8;</code>
     */
    org.nodewox.client.NodeTalk.StrArray getStrArray();
    /**
     * <code>optional .thinese.StrArray str_array = 8;</code>
     */
    org.nodewox.client.NodeTalk.StrArrayOrBuilder getStrArrayOrBuilder();

    /**
     * <code>optional .thinese.BoolArray bool_array = 9;</code>
     */
    org.nodewox.client.NodeTalk.BoolArray getBoolArray();
    /**
     * <code>optional .thinese.BoolArray bool_array = 9;</code>
     */
    org.nodewox.client.NodeTalk.BoolArrayOrBuilder getBoolArrayOrBuilder();

    /**
     * <code>optional .thinese.VariantArray var_array = 10;</code>
     */
    org.nodewox.client.NodeTalk.VariantArray getVarArray();
    /**
     * <code>optional .thinese.VariantArray var_array = 10;</code>
     */
    org.nodewox.client.NodeTalk.VariantArrayOrBuilder getVarArrayOrBuilder();

    /**
     * <code>optional .thinese.PairArray pair_array = 11;</code>
     */
    org.nodewox.client.NodeTalk.PairArray getPairArray();
    /**
     * <code>optional .thinese.PairArray pair_array = 11;</code>
     */
    org.nodewox.client.NodeTalk.PairArrayOrBuilder getPairArrayOrBuilder();

    public org.nodewox.client.NodeTalk.Packet.DataCase getDataCase();
  }
  /**
   * <pre>
   * data packet transfered between nodes
   * </pre>
   *
   * Protobuf type {@code thinese.Packet}
   */
  public  static final class Packet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.Packet)
      PacketOrBuilder {
    // Use Packet.newBuilder() to construct.
    private Packet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Packet() {
      src_ = 0;
      gid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Packet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              src_ = input.readUInt32();
              break;
            }
            case 16: {

              gid_ = input.readUInt32();
              break;
            }
            case 42: {
              org.nodewox.client.NodeTalk.Variant.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((org.nodewox.client.NodeTalk.Variant) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.Variant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.Variant) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            case 50: {
              org.nodewox.client.NodeTalk.IntArray.Builder subBuilder = null;
              if (dataCase_ == 6) {
                subBuilder = ((org.nodewox.client.NodeTalk.IntArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.IntArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.IntArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 6;
              break;
            }
            case 58: {
              org.nodewox.client.NodeTalk.NumArray.Builder subBuilder = null;
              if (dataCase_ == 7) {
                subBuilder = ((org.nodewox.client.NodeTalk.NumArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.NumArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.NumArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 7;
              break;
            }
            case 66: {
              org.nodewox.client.NodeTalk.StrArray.Builder subBuilder = null;
              if (dataCase_ == 8) {
                subBuilder = ((org.nodewox.client.NodeTalk.StrArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.StrArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.StrArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 8;
              break;
            }
            case 74: {
              org.nodewox.client.NodeTalk.BoolArray.Builder subBuilder = null;
              if (dataCase_ == 9) {
                subBuilder = ((org.nodewox.client.NodeTalk.BoolArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.BoolArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.BoolArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 9;
              break;
            }
            case 82: {
              org.nodewox.client.NodeTalk.VariantArray.Builder subBuilder = null;
              if (dataCase_ == 10) {
                subBuilder = ((org.nodewox.client.NodeTalk.VariantArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.VariantArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.VariantArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 10;
              break;
            }
            case 90: {
              org.nodewox.client.NodeTalk.PairArray.Builder subBuilder = null;
              if (dataCase_ == 11) {
                subBuilder = ((org.nodewox.client.NodeTalk.PairArray) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.nodewox.client.NodeTalk.PairArray.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.nodewox.client.NodeTalk.PairArray) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 11;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Packet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Packet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.Packet.class, org.nodewox.client.NodeTalk.Packet.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      VAR_VAL(5),
      INT_ARRAY(6),
      NUM_ARRAY(7),
      STR_ARRAY(8),
      BOOL_ARRAY(9),
      VAR_ARRAY(10),
      PAIR_ARRAY(11),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 5: return VAR_VAL;
          case 6: return INT_ARRAY;
          case 7: return NUM_ARRAY;
          case 8: return STR_ARRAY;
          case 9: return BOOL_ARRAY;
          case 10: return VAR_ARRAY;
          case 11: return PAIR_ARRAY;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int SRC_FIELD_NUMBER = 1;
    private int src_;
    /**
     * <pre>
     * from node-id
     * </pre>
     *
     * <code>optional uint32 src = 1;</code>
     */
    public int getSrc() {
      return src_;
    }

    public static final int GID_FIELD_NUMBER = 2;
    private int gid_;
    /**
     * <pre>
     * from group
     * </pre>
     *
     * <code>optional uint32 gid = 2;</code>
     */
    public int getGid() {
      return gid_;
    }

    public static final int VAR_VAL_FIELD_NUMBER = 5;
    /**
     * <code>optional .thinese.Variant var_val = 5;</code>
     */
    public org.nodewox.client.NodeTalk.Variant getVarVal() {
      if (dataCase_ == 5) {
         return (org.nodewox.client.NodeTalk.Variant) data_;
      }
      return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.Variant var_val = 5;</code>
     */
    public org.nodewox.client.NodeTalk.VariantOrBuilder getVarValOrBuilder() {
      if (dataCase_ == 5) {
         return (org.nodewox.client.NodeTalk.Variant) data_;
      }
      return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
    }

    public static final int INT_ARRAY_FIELD_NUMBER = 6;
    /**
     * <code>optional .thinese.IntArray int_array = 6;</code>
     */
    public org.nodewox.client.NodeTalk.IntArray getIntArray() {
      if (dataCase_ == 6) {
         return (org.nodewox.client.NodeTalk.IntArray) data_;
      }
      return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.IntArray int_array = 6;</code>
     */
    public org.nodewox.client.NodeTalk.IntArrayOrBuilder getIntArrayOrBuilder() {
      if (dataCase_ == 6) {
         return (org.nodewox.client.NodeTalk.IntArray) data_;
      }
      return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
    }

    public static final int NUM_ARRAY_FIELD_NUMBER = 7;
    /**
     * <code>optional .thinese.NumArray num_array = 7;</code>
     */
    public org.nodewox.client.NodeTalk.NumArray getNumArray() {
      if (dataCase_ == 7) {
         return (org.nodewox.client.NodeTalk.NumArray) data_;
      }
      return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.NumArray num_array = 7;</code>
     */
    public org.nodewox.client.NodeTalk.NumArrayOrBuilder getNumArrayOrBuilder() {
      if (dataCase_ == 7) {
         return (org.nodewox.client.NodeTalk.NumArray) data_;
      }
      return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
    }

    public static final int STR_ARRAY_FIELD_NUMBER = 8;
    /**
     * <code>optional .thinese.StrArray str_array = 8;</code>
     */
    public org.nodewox.client.NodeTalk.StrArray getStrArray() {
      if (dataCase_ == 8) {
         return (org.nodewox.client.NodeTalk.StrArray) data_;
      }
      return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.StrArray str_array = 8;</code>
     */
    public org.nodewox.client.NodeTalk.StrArrayOrBuilder getStrArrayOrBuilder() {
      if (dataCase_ == 8) {
         return (org.nodewox.client.NodeTalk.StrArray) data_;
      }
      return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
    }

    public static final int BOOL_ARRAY_FIELD_NUMBER = 9;
    /**
     * <code>optional .thinese.BoolArray bool_array = 9;</code>
     */
    public org.nodewox.client.NodeTalk.BoolArray getBoolArray() {
      if (dataCase_ == 9) {
         return (org.nodewox.client.NodeTalk.BoolArray) data_;
      }
      return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.BoolArray bool_array = 9;</code>
     */
    public org.nodewox.client.NodeTalk.BoolArrayOrBuilder getBoolArrayOrBuilder() {
      if (dataCase_ == 9) {
         return (org.nodewox.client.NodeTalk.BoolArray) data_;
      }
      return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
    }

    public static final int VAR_ARRAY_FIELD_NUMBER = 10;
    /**
     * <code>optional .thinese.VariantArray var_array = 10;</code>
     */
    public org.nodewox.client.NodeTalk.VariantArray getVarArray() {
      if (dataCase_ == 10) {
         return (org.nodewox.client.NodeTalk.VariantArray) data_;
      }
      return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.VariantArray var_array = 10;</code>
     */
    public org.nodewox.client.NodeTalk.VariantArrayOrBuilder getVarArrayOrBuilder() {
      if (dataCase_ == 10) {
         return (org.nodewox.client.NodeTalk.VariantArray) data_;
      }
      return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
    }

    public static final int PAIR_ARRAY_FIELD_NUMBER = 11;
    /**
     * <code>optional .thinese.PairArray pair_array = 11;</code>
     */
    public org.nodewox.client.NodeTalk.PairArray getPairArray() {
      if (dataCase_ == 11) {
         return (org.nodewox.client.NodeTalk.PairArray) data_;
      }
      return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
    }
    /**
     * <code>optional .thinese.PairArray pair_array = 11;</code>
     */
    public org.nodewox.client.NodeTalk.PairArrayOrBuilder getPairArrayOrBuilder() {
      if (dataCase_ == 11) {
         return (org.nodewox.client.NodeTalk.PairArray) data_;
      }
      return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (src_ != 0) {
        output.writeUInt32(1, src_);
      }
      if (gid_ != 0) {
        output.writeUInt32(2, gid_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (org.nodewox.client.NodeTalk.Variant) data_);
      }
      if (dataCase_ == 6) {
        output.writeMessage(6, (org.nodewox.client.NodeTalk.IntArray) data_);
      }
      if (dataCase_ == 7) {
        output.writeMessage(7, (org.nodewox.client.NodeTalk.NumArray) data_);
      }
      if (dataCase_ == 8) {
        output.writeMessage(8, (org.nodewox.client.NodeTalk.StrArray) data_);
      }
      if (dataCase_ == 9) {
        output.writeMessage(9, (org.nodewox.client.NodeTalk.BoolArray) data_);
      }
      if (dataCase_ == 10) {
        output.writeMessage(10, (org.nodewox.client.NodeTalk.VariantArray) data_);
      }
      if (dataCase_ == 11) {
        output.writeMessage(11, (org.nodewox.client.NodeTalk.PairArray) data_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (src_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, src_);
      }
      if (gid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gid_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.nodewox.client.NodeTalk.Variant) data_);
      }
      if (dataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.nodewox.client.NodeTalk.IntArray) data_);
      }
      if (dataCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.nodewox.client.NodeTalk.NumArray) data_);
      }
      if (dataCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.nodewox.client.NodeTalk.StrArray) data_);
      }
      if (dataCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (org.nodewox.client.NodeTalk.BoolArray) data_);
      }
      if (dataCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (org.nodewox.client.NodeTalk.VariantArray) data_);
      }
      if (dataCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (org.nodewox.client.NodeTalk.PairArray) data_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.Packet)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.Packet other = (org.nodewox.client.NodeTalk.Packet) obj;

      boolean result = true;
      result = result && (getSrc()
          == other.getSrc());
      result = result && (getGid()
          == other.getGid());
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 5:
          result = result && getVarVal()
              .equals(other.getVarVal());
          break;
        case 6:
          result = result && getIntArray()
              .equals(other.getIntArray());
          break;
        case 7:
          result = result && getNumArray()
              .equals(other.getNumArray());
          break;
        case 8:
          result = result && getStrArray()
              .equals(other.getStrArray());
          break;
        case 9:
          result = result && getBoolArray()
              .equals(other.getBoolArray());
          break;
        case 10:
          result = result && getVarArray()
              .equals(other.getVarArray());
          break;
        case 11:
          result = result && getPairArray()
              .equals(other.getPairArray());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + SRC_FIELD_NUMBER;
      hash = (53 * hash) + getSrc();
      hash = (37 * hash) + GID_FIELD_NUMBER;
      hash = (53 * hash) + getGid();
      switch (dataCase_) {
        case 5:
          hash = (37 * hash) + VAR_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getVarVal().hashCode();
          break;
        case 6:
          hash = (37 * hash) + INT_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getIntArray().hashCode();
          break;
        case 7:
          hash = (37 * hash) + NUM_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getNumArray().hashCode();
          break;
        case 8:
          hash = (37 * hash) + STR_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getStrArray().hashCode();
          break;
        case 9:
          hash = (37 * hash) + BOOL_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getBoolArray().hashCode();
          break;
        case 10:
          hash = (37 * hash) + VAR_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getVarArray().hashCode();
          break;
        case 11:
          hash = (37 * hash) + PAIR_ARRAY_FIELD_NUMBER;
          hash = (53 * hash) + getPairArray().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Packet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Packet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Packet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.Packet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * data packet transfered between nodes
     * </pre>
     *
     * Protobuf type {@code thinese.Packet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.Packet)
        org.nodewox.client.NodeTalk.PacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Packet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Packet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.Packet.class, org.nodewox.client.NodeTalk.Packet.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.Packet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        src_ = 0;

        gid_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Packet_descriptor;
      }

      public org.nodewox.client.NodeTalk.Packet getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.Packet.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.Packet build() {
        org.nodewox.client.NodeTalk.Packet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.Packet buildPartial() {
        org.nodewox.client.NodeTalk.Packet result = new org.nodewox.client.NodeTalk.Packet(this);
        result.src_ = src_;
        result.gid_ = gid_;
        if (dataCase_ == 5) {
          if (varValBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = varValBuilder_.build();
          }
        }
        if (dataCase_ == 6) {
          if (intArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = intArrayBuilder_.build();
          }
        }
        if (dataCase_ == 7) {
          if (numArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = numArrayBuilder_.build();
          }
        }
        if (dataCase_ == 8) {
          if (strArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = strArrayBuilder_.build();
          }
        }
        if (dataCase_ == 9) {
          if (boolArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = boolArrayBuilder_.build();
          }
        }
        if (dataCase_ == 10) {
          if (varArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = varArrayBuilder_.build();
          }
        }
        if (dataCase_ == 11) {
          if (pairArrayBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = pairArrayBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.Packet) {
          return mergeFrom((org.nodewox.client.NodeTalk.Packet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.Packet other) {
        if (other == org.nodewox.client.NodeTalk.Packet.getDefaultInstance()) return this;
        if (other.getSrc() != 0) {
          setSrc(other.getSrc());
        }
        if (other.getGid() != 0) {
          setGid(other.getGid());
        }
        switch (other.getDataCase()) {
          case VAR_VAL: {
            mergeVarVal(other.getVarVal());
            break;
          }
          case INT_ARRAY: {
            mergeIntArray(other.getIntArray());
            break;
          }
          case NUM_ARRAY: {
            mergeNumArray(other.getNumArray());
            break;
          }
          case STR_ARRAY: {
            mergeStrArray(other.getStrArray());
            break;
          }
          case BOOL_ARRAY: {
            mergeBoolArray(other.getBoolArray());
            break;
          }
          case VAR_ARRAY: {
            mergeVarArray(other.getVarArray());
            break;
          }
          case PAIR_ARRAY: {
            mergePairArray(other.getPairArray());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.Packet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.Packet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int src_ ;
      /**
       * <pre>
       * from node-id
       * </pre>
       *
       * <code>optional uint32 src = 1;</code>
       */
      public int getSrc() {
        return src_;
      }
      /**
       * <pre>
       * from node-id
       * </pre>
       *
       * <code>optional uint32 src = 1;</code>
       */
      public Builder setSrc(int value) {
        
        src_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * from node-id
       * </pre>
       *
       * <code>optional uint32 src = 1;</code>
       */
      public Builder clearSrc() {
        
        src_ = 0;
        onChanged();
        return this;
      }

      private int gid_ ;
      /**
       * <pre>
       * from group
       * </pre>
       *
       * <code>optional uint32 gid = 2;</code>
       */
      public int getGid() {
        return gid_;
      }
      /**
       * <pre>
       * from group
       * </pre>
       *
       * <code>optional uint32 gid = 2;</code>
       */
      public Builder setGid(int value) {
        
        gid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * from group
       * </pre>
       *
       * <code>optional uint32 gid = 2;</code>
       */
      public Builder clearGid() {
        
        gid_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> varValBuilder_;
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public org.nodewox.client.NodeTalk.Variant getVarVal() {
        if (varValBuilder_ == null) {
          if (dataCase_ == 5) {
            return (org.nodewox.client.NodeTalk.Variant) data_;
          }
          return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return varValBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public Builder setVarVal(org.nodewox.client.NodeTalk.Variant value) {
        if (varValBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          varValBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public Builder setVarVal(
          org.nodewox.client.NodeTalk.Variant.Builder builderForValue) {
        if (varValBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          varValBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public Builder mergeVarVal(org.nodewox.client.NodeTalk.Variant value) {
        if (varValBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != org.nodewox.client.NodeTalk.Variant.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.Variant.newBuilder((org.nodewox.client.NodeTalk.Variant) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            varValBuilder_.mergeFrom(value);
          }
          varValBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public Builder clearVarVal() {
        if (varValBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          varValBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public org.nodewox.client.NodeTalk.Variant.Builder getVarValBuilder() {
        return getVarValFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      public org.nodewox.client.NodeTalk.VariantOrBuilder getVarValOrBuilder() {
        if ((dataCase_ == 5) && (varValBuilder_ != null)) {
          return varValBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (org.nodewox.client.NodeTalk.Variant) data_;
          }
          return org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.Variant var_val = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder> 
          getVarValFieldBuilder() {
        if (varValBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = org.nodewox.client.NodeTalk.Variant.getDefaultInstance();
          }
          varValBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.Variant, org.nodewox.client.NodeTalk.Variant.Builder, org.nodewox.client.NodeTalk.VariantOrBuilder>(
                  (org.nodewox.client.NodeTalk.Variant) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return varValBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.IntArray, org.nodewox.client.NodeTalk.IntArray.Builder, org.nodewox.client.NodeTalk.IntArrayOrBuilder> intArrayBuilder_;
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public org.nodewox.client.NodeTalk.IntArray getIntArray() {
        if (intArrayBuilder_ == null) {
          if (dataCase_ == 6) {
            return (org.nodewox.client.NodeTalk.IntArray) data_;
          }
          return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
        } else {
          if (dataCase_ == 6) {
            return intArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public Builder setIntArray(org.nodewox.client.NodeTalk.IntArray value) {
        if (intArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          intArrayBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public Builder setIntArray(
          org.nodewox.client.NodeTalk.IntArray.Builder builderForValue) {
        if (intArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          intArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public Builder mergeIntArray(org.nodewox.client.NodeTalk.IntArray value) {
        if (intArrayBuilder_ == null) {
          if (dataCase_ == 6 &&
              data_ != org.nodewox.client.NodeTalk.IntArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.IntArray.newBuilder((org.nodewox.client.NodeTalk.IntArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 6) {
            intArrayBuilder_.mergeFrom(value);
          }
          intArrayBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public Builder clearIntArray() {
        if (intArrayBuilder_ == null) {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
          }
          intArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public org.nodewox.client.NodeTalk.IntArray.Builder getIntArrayBuilder() {
        return getIntArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      public org.nodewox.client.NodeTalk.IntArrayOrBuilder getIntArrayOrBuilder() {
        if ((dataCase_ == 6) && (intArrayBuilder_ != null)) {
          return intArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 6) {
            return (org.nodewox.client.NodeTalk.IntArray) data_;
          }
          return org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.IntArray int_array = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.IntArray, org.nodewox.client.NodeTalk.IntArray.Builder, org.nodewox.client.NodeTalk.IntArrayOrBuilder> 
          getIntArrayFieldBuilder() {
        if (intArrayBuilder_ == null) {
          if (!(dataCase_ == 6)) {
            data_ = org.nodewox.client.NodeTalk.IntArray.getDefaultInstance();
          }
          intArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.IntArray, org.nodewox.client.NodeTalk.IntArray.Builder, org.nodewox.client.NodeTalk.IntArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.IntArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 6;
        onChanged();;
        return intArrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.NumArray, org.nodewox.client.NodeTalk.NumArray.Builder, org.nodewox.client.NodeTalk.NumArrayOrBuilder> numArrayBuilder_;
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public org.nodewox.client.NodeTalk.NumArray getNumArray() {
        if (numArrayBuilder_ == null) {
          if (dataCase_ == 7) {
            return (org.nodewox.client.NodeTalk.NumArray) data_;
          }
          return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
        } else {
          if (dataCase_ == 7) {
            return numArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public Builder setNumArray(org.nodewox.client.NodeTalk.NumArray value) {
        if (numArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          numArrayBuilder_.setMessage(value);
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public Builder setNumArray(
          org.nodewox.client.NodeTalk.NumArray.Builder builderForValue) {
        if (numArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          numArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public Builder mergeNumArray(org.nodewox.client.NodeTalk.NumArray value) {
        if (numArrayBuilder_ == null) {
          if (dataCase_ == 7 &&
              data_ != org.nodewox.client.NodeTalk.NumArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.NumArray.newBuilder((org.nodewox.client.NodeTalk.NumArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 7) {
            numArrayBuilder_.mergeFrom(value);
          }
          numArrayBuilder_.setMessage(value);
        }
        dataCase_ = 7;
        return this;
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public Builder clearNumArray() {
        if (numArrayBuilder_ == null) {
          if (dataCase_ == 7) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 7) {
            dataCase_ = 0;
            data_ = null;
          }
          numArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public org.nodewox.client.NodeTalk.NumArray.Builder getNumArrayBuilder() {
        return getNumArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      public org.nodewox.client.NodeTalk.NumArrayOrBuilder getNumArrayOrBuilder() {
        if ((dataCase_ == 7) && (numArrayBuilder_ != null)) {
          return numArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 7) {
            return (org.nodewox.client.NodeTalk.NumArray) data_;
          }
          return org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.NumArray num_array = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.NumArray, org.nodewox.client.NodeTalk.NumArray.Builder, org.nodewox.client.NodeTalk.NumArrayOrBuilder> 
          getNumArrayFieldBuilder() {
        if (numArrayBuilder_ == null) {
          if (!(dataCase_ == 7)) {
            data_ = org.nodewox.client.NodeTalk.NumArray.getDefaultInstance();
          }
          numArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.NumArray, org.nodewox.client.NodeTalk.NumArray.Builder, org.nodewox.client.NodeTalk.NumArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.NumArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 7;
        onChanged();;
        return numArrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.StrArray, org.nodewox.client.NodeTalk.StrArray.Builder, org.nodewox.client.NodeTalk.StrArrayOrBuilder> strArrayBuilder_;
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public org.nodewox.client.NodeTalk.StrArray getStrArray() {
        if (strArrayBuilder_ == null) {
          if (dataCase_ == 8) {
            return (org.nodewox.client.NodeTalk.StrArray) data_;
          }
          return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
        } else {
          if (dataCase_ == 8) {
            return strArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public Builder setStrArray(org.nodewox.client.NodeTalk.StrArray value) {
        if (strArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          strArrayBuilder_.setMessage(value);
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public Builder setStrArray(
          org.nodewox.client.NodeTalk.StrArray.Builder builderForValue) {
        if (strArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          strArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public Builder mergeStrArray(org.nodewox.client.NodeTalk.StrArray value) {
        if (strArrayBuilder_ == null) {
          if (dataCase_ == 8 &&
              data_ != org.nodewox.client.NodeTalk.StrArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.StrArray.newBuilder((org.nodewox.client.NodeTalk.StrArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 8) {
            strArrayBuilder_.mergeFrom(value);
          }
          strArrayBuilder_.setMessage(value);
        }
        dataCase_ = 8;
        return this;
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public Builder clearStrArray() {
        if (strArrayBuilder_ == null) {
          if (dataCase_ == 8) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 8) {
            dataCase_ = 0;
            data_ = null;
          }
          strArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public org.nodewox.client.NodeTalk.StrArray.Builder getStrArrayBuilder() {
        return getStrArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      public org.nodewox.client.NodeTalk.StrArrayOrBuilder getStrArrayOrBuilder() {
        if ((dataCase_ == 8) && (strArrayBuilder_ != null)) {
          return strArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 8) {
            return (org.nodewox.client.NodeTalk.StrArray) data_;
          }
          return org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.StrArray str_array = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.StrArray, org.nodewox.client.NodeTalk.StrArray.Builder, org.nodewox.client.NodeTalk.StrArrayOrBuilder> 
          getStrArrayFieldBuilder() {
        if (strArrayBuilder_ == null) {
          if (!(dataCase_ == 8)) {
            data_ = org.nodewox.client.NodeTalk.StrArray.getDefaultInstance();
          }
          strArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.StrArray, org.nodewox.client.NodeTalk.StrArray.Builder, org.nodewox.client.NodeTalk.StrArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.StrArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 8;
        onChanged();;
        return strArrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.BoolArray, org.nodewox.client.NodeTalk.BoolArray.Builder, org.nodewox.client.NodeTalk.BoolArrayOrBuilder> boolArrayBuilder_;
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public org.nodewox.client.NodeTalk.BoolArray getBoolArray() {
        if (boolArrayBuilder_ == null) {
          if (dataCase_ == 9) {
            return (org.nodewox.client.NodeTalk.BoolArray) data_;
          }
          return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
        } else {
          if (dataCase_ == 9) {
            return boolArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public Builder setBoolArray(org.nodewox.client.NodeTalk.BoolArray value) {
        if (boolArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          boolArrayBuilder_.setMessage(value);
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public Builder setBoolArray(
          org.nodewox.client.NodeTalk.BoolArray.Builder builderForValue) {
        if (boolArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          boolArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public Builder mergeBoolArray(org.nodewox.client.NodeTalk.BoolArray value) {
        if (boolArrayBuilder_ == null) {
          if (dataCase_ == 9 &&
              data_ != org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.BoolArray.newBuilder((org.nodewox.client.NodeTalk.BoolArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 9) {
            boolArrayBuilder_.mergeFrom(value);
          }
          boolArrayBuilder_.setMessage(value);
        }
        dataCase_ = 9;
        return this;
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public Builder clearBoolArray() {
        if (boolArrayBuilder_ == null) {
          if (dataCase_ == 9) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 9) {
            dataCase_ = 0;
            data_ = null;
          }
          boolArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public org.nodewox.client.NodeTalk.BoolArray.Builder getBoolArrayBuilder() {
        return getBoolArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      public org.nodewox.client.NodeTalk.BoolArrayOrBuilder getBoolArrayOrBuilder() {
        if ((dataCase_ == 9) && (boolArrayBuilder_ != null)) {
          return boolArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 9) {
            return (org.nodewox.client.NodeTalk.BoolArray) data_;
          }
          return org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.BoolArray bool_array = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.BoolArray, org.nodewox.client.NodeTalk.BoolArray.Builder, org.nodewox.client.NodeTalk.BoolArrayOrBuilder> 
          getBoolArrayFieldBuilder() {
        if (boolArrayBuilder_ == null) {
          if (!(dataCase_ == 9)) {
            data_ = org.nodewox.client.NodeTalk.BoolArray.getDefaultInstance();
          }
          boolArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.BoolArray, org.nodewox.client.NodeTalk.BoolArray.Builder, org.nodewox.client.NodeTalk.BoolArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.BoolArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 9;
        onChanged();;
        return boolArrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.VariantArray, org.nodewox.client.NodeTalk.VariantArray.Builder, org.nodewox.client.NodeTalk.VariantArrayOrBuilder> varArrayBuilder_;
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public org.nodewox.client.NodeTalk.VariantArray getVarArray() {
        if (varArrayBuilder_ == null) {
          if (dataCase_ == 10) {
            return (org.nodewox.client.NodeTalk.VariantArray) data_;
          }
          return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
        } else {
          if (dataCase_ == 10) {
            return varArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public Builder setVarArray(org.nodewox.client.NodeTalk.VariantArray value) {
        if (varArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          varArrayBuilder_.setMessage(value);
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public Builder setVarArray(
          org.nodewox.client.NodeTalk.VariantArray.Builder builderForValue) {
        if (varArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          varArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public Builder mergeVarArray(org.nodewox.client.NodeTalk.VariantArray value) {
        if (varArrayBuilder_ == null) {
          if (dataCase_ == 10 &&
              data_ != org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.VariantArray.newBuilder((org.nodewox.client.NodeTalk.VariantArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 10) {
            varArrayBuilder_.mergeFrom(value);
          }
          varArrayBuilder_.setMessage(value);
        }
        dataCase_ = 10;
        return this;
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public Builder clearVarArray() {
        if (varArrayBuilder_ == null) {
          if (dataCase_ == 10) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 10) {
            dataCase_ = 0;
            data_ = null;
          }
          varArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public org.nodewox.client.NodeTalk.VariantArray.Builder getVarArrayBuilder() {
        return getVarArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      public org.nodewox.client.NodeTalk.VariantArrayOrBuilder getVarArrayOrBuilder() {
        if ((dataCase_ == 10) && (varArrayBuilder_ != null)) {
          return varArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 10) {
            return (org.nodewox.client.NodeTalk.VariantArray) data_;
          }
          return org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.VariantArray var_array = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.VariantArray, org.nodewox.client.NodeTalk.VariantArray.Builder, org.nodewox.client.NodeTalk.VariantArrayOrBuilder> 
          getVarArrayFieldBuilder() {
        if (varArrayBuilder_ == null) {
          if (!(dataCase_ == 10)) {
            data_ = org.nodewox.client.NodeTalk.VariantArray.getDefaultInstance();
          }
          varArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.VariantArray, org.nodewox.client.NodeTalk.VariantArray.Builder, org.nodewox.client.NodeTalk.VariantArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.VariantArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 10;
        onChanged();;
        return varArrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.PairArray, org.nodewox.client.NodeTalk.PairArray.Builder, org.nodewox.client.NodeTalk.PairArrayOrBuilder> pairArrayBuilder_;
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public org.nodewox.client.NodeTalk.PairArray getPairArray() {
        if (pairArrayBuilder_ == null) {
          if (dataCase_ == 11) {
            return (org.nodewox.client.NodeTalk.PairArray) data_;
          }
          return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
        } else {
          if (dataCase_ == 11) {
            return pairArrayBuilder_.getMessage();
          }
          return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public Builder setPairArray(org.nodewox.client.NodeTalk.PairArray value) {
        if (pairArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          pairArrayBuilder_.setMessage(value);
        }
        dataCase_ = 11;
        return this;
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public Builder setPairArray(
          org.nodewox.client.NodeTalk.PairArray.Builder builderForValue) {
        if (pairArrayBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          pairArrayBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 11;
        return this;
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public Builder mergePairArray(org.nodewox.client.NodeTalk.PairArray value) {
        if (pairArrayBuilder_ == null) {
          if (dataCase_ == 11 &&
              data_ != org.nodewox.client.NodeTalk.PairArray.getDefaultInstance()) {
            data_ = org.nodewox.client.NodeTalk.PairArray.newBuilder((org.nodewox.client.NodeTalk.PairArray) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 11) {
            pairArrayBuilder_.mergeFrom(value);
          }
          pairArrayBuilder_.setMessage(value);
        }
        dataCase_ = 11;
        return this;
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public Builder clearPairArray() {
        if (pairArrayBuilder_ == null) {
          if (dataCase_ == 11) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 11) {
            dataCase_ = 0;
            data_ = null;
          }
          pairArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public org.nodewox.client.NodeTalk.PairArray.Builder getPairArrayBuilder() {
        return getPairArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      public org.nodewox.client.NodeTalk.PairArrayOrBuilder getPairArrayOrBuilder() {
        if ((dataCase_ == 11) && (pairArrayBuilder_ != null)) {
          return pairArrayBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 11) {
            return (org.nodewox.client.NodeTalk.PairArray) data_;
          }
          return org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
        }
      }
      /**
       * <code>optional .thinese.PairArray pair_array = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.nodewox.client.NodeTalk.PairArray, org.nodewox.client.NodeTalk.PairArray.Builder, org.nodewox.client.NodeTalk.PairArrayOrBuilder> 
          getPairArrayFieldBuilder() {
        if (pairArrayBuilder_ == null) {
          if (!(dataCase_ == 11)) {
            data_ = org.nodewox.client.NodeTalk.PairArray.getDefaultInstance();
          }
          pairArrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.nodewox.client.NodeTalk.PairArray, org.nodewox.client.NodeTalk.PairArray.Builder, org.nodewox.client.NodeTalk.PairArrayOrBuilder>(
                  (org.nodewox.client.NodeTalk.PairArray) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 11;
        onChanged();;
        return pairArrayBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.Packet)
    }

    // @@protoc_insertion_point(class_scope:thinese.Packet)
    private static final org.nodewox.client.NodeTalk.Packet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.Packet();
    }

    public static org.nodewox.client.NodeTalk.Packet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Packet>
        PARSER = new com.google.protobuf.AbstractParser<Packet>() {
      public Packet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Packet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Packet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Packet> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.Packet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * request action
     * </pre>
     *
     * <code>optional .thinese.Request.ActionType action = 1;</code>
     */
    int getActionValue();
    /**
     * <pre>
     * request action
     * </pre>
     *
     * <code>optional .thinese.Request.ActionType action = 1;</code>
     */
    org.nodewox.client.NodeTalk.Request.ActionType getAction();

    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    java.util.List<java.lang.Integer> getChildrenList();
    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    int getChildrenCount();
    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    int getChildren(int index);

    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */
    int getParamsCount();
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */
    boolean containsParams(
        java.lang.String key);
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getParams();
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getParamsMap();
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue);
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */
    int getDataCount();
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */
    boolean containsData(
        java.lang.String key);
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getData();
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getDataMap();
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    org.nodewox.client.NodeTalk.Variant getDataOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue);
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    org.nodewox.client.NodeTalk.Variant getDataOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * a request to node
   * </pre>
   *
   * Protobuf type {@code thinese.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      action_ = 0;
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              action_ = rawValue;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                children_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              children_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                children_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                children_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                params_ = com.google.protobuf.MapField.newMapField(
                    ParamsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
              params = input.readMessage(
                  ParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              params_.getMutableMap().put(params.getKey(), params.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                data_ = com.google.protobuf.MapField.newMapField(
                    DataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
              data = input.readMessage(
                  DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              data_.getMutableMap().put(data.getKey(), data.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Request_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetParams();
        case 4:
          return internalGetData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.Request.class, org.nodewox.client.NodeTalk.Request.Builder.class);
    }

    /**
     * Protobuf enum {@code thinese.Request.ActionType}
     */
    public enum ActionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ACTION_CHECK_ALIVE = 0;</code>
       */
      ACTION_CHECK_ALIVE(0),
      /**
       * <code>ACTION_CHECK_PARAM = 1;</code>
       */
      ACTION_CHECK_PARAM(1),
      /**
       * <code>ACTION_CHECK_PARAM_ALIVE = 2;</code>
       */
      ACTION_CHECK_PARAM_ALIVE(2),
      /**
       * <code>ACTION_SET_PARAM = 3;</code>
       */
      ACTION_SET_PARAM(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ACTION_CHECK_ALIVE = 0;</code>
       */
      public static final int ACTION_CHECK_ALIVE_VALUE = 0;
      /**
       * <code>ACTION_CHECK_PARAM = 1;</code>
       */
      public static final int ACTION_CHECK_PARAM_VALUE = 1;
      /**
       * <code>ACTION_CHECK_PARAM_ALIVE = 2;</code>
       */
      public static final int ACTION_CHECK_PARAM_ALIVE_VALUE = 2;
      /**
       * <code>ACTION_SET_PARAM = 3;</code>
       */
      public static final int ACTION_SET_PARAM_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActionType valueOf(int value) {
        return forNumber(value);
      }

      public static ActionType forNumber(int value) {
        switch (value) {
          case 0: return ACTION_CHECK_ALIVE;
          case 1: return ACTION_CHECK_PARAM;
          case 2: return ACTION_CHECK_PARAM_ALIVE;
          case 3: return ACTION_SET_PARAM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ActionType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
              public ActionType findValueByNumber(int number) {
                return ActionType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.Request.getDescriptor().getEnumTypes().get(0);
      }

      private static final ActionType[] VALUES = values();

      public static ActionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ActionType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:thinese.Request.ActionType)
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <pre>
     * request action
     * </pre>
     *
     * <code>optional .thinese.Request.ActionType action = 1;</code>
     */
    public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * request action
     * </pre>
     *
     * <code>optional .thinese.Request.ActionType action = 1;</code>
     */
    public org.nodewox.client.NodeTalk.Request.ActionType getAction() {
      org.nodewox.client.NodeTalk.Request.ActionType result = org.nodewox.client.NodeTalk.Request.ActionType.valueOf(action_);
      return result == null ? org.nodewox.client.NodeTalk.Request.ActionType.UNRECOGNIZED : result;
    }

    public static final int CHILDREN_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> children_;
    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getChildrenList() {
      return children_;
    }
    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <pre>
     * request into children too (ids of children)
     * </pre>
     *
     * <code>repeated uint32 children = 2;</code>
     */
    public int getChildren(int index) {
      return children_.get(index);
    }
    private int childrenMemoizedSerializedSize = -1;

    public static final int PARAMS_FIELD_NUMBER = 3;
    private static final class ParamsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.nodewox.client.NodeTalk.Variant>newDefaultInstance(
                  org.nodewox.client.NodeTalk.internal_static_thinese_Request_ParamsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.nodewox.client.NodeTalk.Variant> params_;
    private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    internalGetParams() {
      if (params_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      return params_;
    }

    public int getParamsCount() {
      return internalGetParams().getMap().size();
    }
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    public boolean containsParams(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParams() {
      return getParamsMap();
    }
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParamsMap() {
      return internalGetParams().getMap();
    }
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * parameter values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private static final class DataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.nodewox.client.NodeTalk.Variant>newDefaultInstance(
                  org.nodewox.client.NodeTalk.internal_static_thinese_Request_DataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.nodewox.client.NodeTalk.Variant> data_;
    private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    internalGetData() {
      if (data_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      return data_;
    }

    public int getDataCount() {
      return internalGetData().getMap().size();
    }
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    public boolean containsData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getData() {
      return getDataMap();
    }
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getDataMap() {
      return internalGetData().getMap();
    }
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getDataOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * request data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (action_ != org.nodewox.client.NodeTalk.Request.ActionType.ACTION_CHECK_ALIVE.getNumber()) {
        output.writeEnum(1, action_);
      }
      if (getChildrenList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(childrenMemoizedSerializedSize);
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeUInt32NoTag(children_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        params = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(3, params);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        data = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(4, data);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (action_ != org.nodewox.client.NodeTalk.Request.ActionType.ACTION_CHECK_ALIVE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < children_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(children_.get(i));
        }
        size += dataSize;
        if (!getChildrenList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        childrenMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        params = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, params);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        data = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, data);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.Request)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.Request other = (org.nodewox.client.NodeTalk.Request) obj;

      boolean result = true;
      result = result && action_ == other.action_;
      result = result && getChildrenList()
          .equals(other.getChildrenList());
      result = result && internalGetParams().equals(
          other.internalGetParams());
      result = result && internalGetData().equals(
          other.internalGetData());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      if (!internalGetParams().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParams().hashCode();
      }
      if (!internalGetData().getMap().isEmpty()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a request to node
     * </pre>
     *
     * Protobuf type {@code thinese.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.Request)
        org.nodewox.client.NodeTalk.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Request_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetParams();
          case 4:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableParams();
          case 4:
            return internalGetMutableData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.Request.class, org.nodewox.client.NodeTalk.Request.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        action_ = 0;

        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableParams().clear();
        internalGetMutableData().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Request_descriptor;
      }

      public org.nodewox.client.NodeTalk.Request getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.Request.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.Request build() {
        org.nodewox.client.NodeTalk.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.Request buildPartial() {
        org.nodewox.client.NodeTalk.Request result = new org.nodewox.client.NodeTalk.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.action_ = action_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = java.util.Collections.unmodifiableList(children_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.children_ = children_;
        result.params_ = internalGetParams();
        result.params_.makeImmutable();
        result.data_ = internalGetData();
        result.data_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.Request) {
          return mergeFrom((org.nodewox.client.NodeTalk.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.Request other) {
        if (other == org.nodewox.client.NodeTalk.Request.getDefaultInstance()) return this;
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (!other.children_.isEmpty()) {
          if (children_.isEmpty()) {
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureChildrenIsMutable();
            children_.addAll(other.children_);
          }
          onChanged();
        }
        internalGetMutableParams().mergeFrom(
            other.internalGetParams());
        internalGetMutableData().mergeFrom(
            other.internalGetData());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int action_ = 0;
      /**
       * <pre>
       * request action
       * </pre>
       *
       * <code>optional .thinese.Request.ActionType action = 1;</code>
       */
      public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * request action
       * </pre>
       *
       * <code>optional .thinese.Request.ActionType action = 1;</code>
       */
      public Builder setActionValue(int value) {
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request action
       * </pre>
       *
       * <code>optional .thinese.Request.ActionType action = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Request.ActionType getAction() {
        org.nodewox.client.NodeTalk.Request.ActionType result = org.nodewox.client.NodeTalk.Request.ActionType.valueOf(action_);
        return result == null ? org.nodewox.client.NodeTalk.Request.ActionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * request action
       * </pre>
       *
       * <code>optional .thinese.Request.ActionType action = 1;</code>
       */
      public Builder setAction(org.nodewox.client.NodeTalk.Request.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request action
       * </pre>
       *
       * <code>optional .thinese.Request.ActionType action = 1;</code>
       */
      public Builder clearAction() {
        
        action_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> children_ = java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = new java.util.ArrayList<java.lang.Integer>(children_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getChildrenList() {
        return java.util.Collections.unmodifiableList(children_);
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public int getChildrenCount() {
        return children_.size();
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public int getChildren(int index) {
        return children_.get(index);
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public Builder setChildren(
          int index, int value) {
        ensureChildrenIsMutable();
        children_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public Builder addChildren(int value) {
        ensureChildrenIsMutable();
        children_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChildrenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, children_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request into children too (ids of children)
       * </pre>
       *
       * <code>repeated uint32 children = 2;</code>
       */
      public Builder clearChildren() {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> params_;
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetParams() {
        if (params_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        return params_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetMutableParams() {
        onChanged();;
        if (params_ == null) {
          params_ = com.google.protobuf.MapField.newMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        if (!params_.isMutable()) {
          params_ = params_.copy();
        }
        return params_;
      }

      public int getParamsCount() {
        return internalGetParams().getMap().size();
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public boolean containsParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetParams().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParamsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParams() {
        return getParamsMap();
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParamsMap() {
        return internalGetParams().getMap();
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetParams().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetParams().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearParams() {
        getMutableParams().clear();
        return this;
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public Builder removeParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableParams().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      getMutableParams() {
        return internalGetMutableParams().getMutableMap();
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */
      public Builder putParams(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableParams().put(key, value);
        return this;
      }
      /**
       * <pre>
       * parameter values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 3;</code>
       */

      public Builder putAllParams(
          java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> values) {
        getMutableParams().putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> data_;
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetMutableData() {
        onChanged();;
        if (data_ == null) {
          data_ = com.google.protobuf.MapField.newMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        if (!data_.isMutable()) {
          data_ = data_.copy();
        }
        return data_;
      }

      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public boolean containsData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getData() {
        return getDataMap();
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getDataOrDefault(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearData() {
        getMutableData().clear();
        return this;
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public Builder removeData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableData().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      getMutableData() {
        return internalGetMutableData().getMutableMap();
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */
      public Builder putData(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableData().put(key, value);
        return this;
      }
      /**
       * <pre>
       * request data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 4;</code>
       */

      public Builder putAllData(
          java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> values) {
        getMutableData().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.Request)
    }

    // @@protoc_insertion_point(class_scope:thinese.Request)
    private static final org.nodewox.client.NodeTalk.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.Request();
    }

    public static org.nodewox.client.NodeTalk.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:thinese.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .thinese.Response.AckType acktype = 1;</code>
     */
    int getAcktypeValue();
    /**
     * <code>optional .thinese.Response.AckType acktype = 1;</code>
     */
    org.nodewox.client.NodeTalk.Response.AckType getAcktype();

    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */
    int getParamsCount();
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */
    boolean containsParams(
        java.lang.String key);
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getParams();
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getParamsMap();
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue);
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */
    int getDataCount();
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */
    boolean containsData(
        java.lang.String key);
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getData();
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */
    java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    getDataMap();
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    org.nodewox.client.NodeTalk.Variant getDataOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue);
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    org.nodewox.client.NodeTalk.Variant getDataOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * response from node
   * </pre>
   *
   * Protobuf type {@code thinese.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:thinese.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      acktype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              acktype_ = rawValue;
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                params_ = com.google.protobuf.MapField.newMapField(
                    ParamsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
              params = input.readMessage(
                  ParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              params_.getMutableMap().put(params.getKey(), params.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                data_ = com.google.protobuf.MapField.newMapField(
                    DataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
              data = input.readMessage(
                  DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              data_.getMutableMap().put(data.getKey(), data.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Response_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 14:
          return internalGetParams();
        case 15:
          return internalGetData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.nodewox.client.NodeTalk.internal_static_thinese_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.nodewox.client.NodeTalk.Response.class, org.nodewox.client.NodeTalk.Response.Builder.class);
    }

    /**
     * Protobuf enum {@code thinese.Response.AckType}
     */
    public enum AckType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ACK_OK = 0;</code>
       */
      ACK_OK(0),
      /**
       * <code>ACK_WARN = 1;</code>
       */
      ACK_WARN(1),
      /**
       * <code>ACK_ERR = 2;</code>
       */
      ACK_ERR(2),
      /**
       * <code>ACK_DENY = 3;</code>
       */
      ACK_DENY(3),
      /**
       * <code>ACK_BYE = 15;</code>
       */
      ACK_BYE(15),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ACK_OK = 0;</code>
       */
      public static final int ACK_OK_VALUE = 0;
      /**
       * <code>ACK_WARN = 1;</code>
       */
      public static final int ACK_WARN_VALUE = 1;
      /**
       * <code>ACK_ERR = 2;</code>
       */
      public static final int ACK_ERR_VALUE = 2;
      /**
       * <code>ACK_DENY = 3;</code>
       */
      public static final int ACK_DENY_VALUE = 3;
      /**
       * <code>ACK_BYE = 15;</code>
       */
      public static final int ACK_BYE_VALUE = 15;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AckType valueOf(int value) {
        return forNumber(value);
      }

      public static AckType forNumber(int value) {
        switch (value) {
          case 0: return ACK_OK;
          case 1: return ACK_WARN;
          case 2: return ACK_ERR;
          case 3: return ACK_DENY;
          case 15: return ACK_BYE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AckType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AckType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AckType>() {
              public AckType findValueByNumber(int number) {
                return AckType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.Response.getDescriptor().getEnumTypes().get(0);
      }

      private static final AckType[] VALUES = values();

      public static AckType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AckType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:thinese.Response.AckType)
    }

    private int bitField0_;
    public static final int ACKTYPE_FIELD_NUMBER = 1;
    private int acktype_;
    /**
     * <code>optional .thinese.Response.AckType acktype = 1;</code>
     */
    public int getAcktypeValue() {
      return acktype_;
    }
    /**
     * <code>optional .thinese.Response.AckType acktype = 1;</code>
     */
    public org.nodewox.client.NodeTalk.Response.AckType getAcktype() {
      org.nodewox.client.NodeTalk.Response.AckType result = org.nodewox.client.NodeTalk.Response.AckType.valueOf(acktype_);
      return result == null ? org.nodewox.client.NodeTalk.Response.AckType.UNRECOGNIZED : result;
    }

    public static final int PARAMS_FIELD_NUMBER = 14;
    private static final class ParamsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.nodewox.client.NodeTalk.Variant>newDefaultInstance(
                  org.nodewox.client.NodeTalk.internal_static_thinese_Response_ParamsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.nodewox.client.NodeTalk.Variant> params_;
    private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    internalGetParams() {
      if (params_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      return params_;
    }

    public int getParamsCount() {
      return internalGetParams().getMap().size();
    }
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    public boolean containsParams(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParams() {
      return getParamsMap();
    }
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParamsMap() {
      return internalGetParams().getMap();
    }
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * current param values
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATA_FIELD_NUMBER = 15;
    private static final class DataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.nodewox.client.NodeTalk.Variant>newDefaultInstance(
                  org.nodewox.client.NodeTalk.internal_static_thinese_Response_DataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.nodewox.client.NodeTalk.Variant.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.nodewox.client.NodeTalk.Variant> data_;
    private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
    internalGetData() {
      if (data_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      return data_;
    }

    public int getDataCount() {
      return internalGetData().getMap().size();
    }
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    public boolean containsData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getData() {
      return getDataMap();
    }
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getDataMap() {
      return internalGetData().getMap();
    }
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getDataOrDefault(
        java.lang.String key,
        org.nodewox.client.NodeTalk.Variant defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * extra data
     * </pre>
     *
     * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
     */

    public org.nodewox.client.NodeTalk.Variant getDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
          internalGetData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (acktype_ != org.nodewox.client.NodeTalk.Response.AckType.ACK_OK.getNumber()) {
        output.writeEnum(1, acktype_);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        params = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(14, params);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        data = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(15, data);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (acktype_ != org.nodewox.client.NodeTalk.Response.AckType.ACK_OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, acktype_);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        params = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, params);
      }
      for (java.util.Map.Entry<java.lang.String, org.nodewox.client.NodeTalk.Variant> entry
           : internalGetData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.nodewox.client.NodeTalk.Variant>
        data = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, data);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.nodewox.client.NodeTalk.Response)) {
        return super.equals(obj);
      }
      org.nodewox.client.NodeTalk.Response other = (org.nodewox.client.NodeTalk.Response) obj;

      boolean result = true;
      result = result && acktype_ == other.acktype_;
      result = result && internalGetParams().equals(
          other.internalGetParams());
      result = result && internalGetData().equals(
          other.internalGetData());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ACKTYPE_FIELD_NUMBER;
      hash = (53 * hash) + acktype_;
      if (!internalGetParams().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParams().hashCode();
      }
      if (!internalGetData().getMap().isEmpty()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.nodewox.client.NodeTalk.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.nodewox.client.NodeTalk.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.nodewox.client.NodeTalk.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * response from node
     * </pre>
     *
     * Protobuf type {@code thinese.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:thinese.Response)
        org.nodewox.client.NodeTalk.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Response_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 14:
            return internalGetParams();
          case 15:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 14:
            return internalGetMutableParams();
          case 15:
            return internalGetMutableData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.nodewox.client.NodeTalk.Response.class, org.nodewox.client.NodeTalk.Response.Builder.class);
      }

      // Construct using org.nodewox.client.NodeTalk.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        acktype_ = 0;

        internalGetMutableParams().clear();
        internalGetMutableData().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.nodewox.client.NodeTalk.internal_static_thinese_Response_descriptor;
      }

      public org.nodewox.client.NodeTalk.Response getDefaultInstanceForType() {
        return org.nodewox.client.NodeTalk.Response.getDefaultInstance();
      }

      public org.nodewox.client.NodeTalk.Response build() {
        org.nodewox.client.NodeTalk.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.nodewox.client.NodeTalk.Response buildPartial() {
        org.nodewox.client.NodeTalk.Response result = new org.nodewox.client.NodeTalk.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.acktype_ = acktype_;
        result.params_ = internalGetParams();
        result.params_.makeImmutable();
        result.data_ = internalGetData();
        result.data_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.nodewox.client.NodeTalk.Response) {
          return mergeFrom((org.nodewox.client.NodeTalk.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.nodewox.client.NodeTalk.Response other) {
        if (other == org.nodewox.client.NodeTalk.Response.getDefaultInstance()) return this;
        if (other.acktype_ != 0) {
          setAcktypeValue(other.getAcktypeValue());
        }
        internalGetMutableParams().mergeFrom(
            other.internalGetParams());
        internalGetMutableData().mergeFrom(
            other.internalGetData());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.nodewox.client.NodeTalk.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.nodewox.client.NodeTalk.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int acktype_ = 0;
      /**
       * <code>optional .thinese.Response.AckType acktype = 1;</code>
       */
      public int getAcktypeValue() {
        return acktype_;
      }
      /**
       * <code>optional .thinese.Response.AckType acktype = 1;</code>
       */
      public Builder setAcktypeValue(int value) {
        acktype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .thinese.Response.AckType acktype = 1;</code>
       */
      public org.nodewox.client.NodeTalk.Response.AckType getAcktype() {
        org.nodewox.client.NodeTalk.Response.AckType result = org.nodewox.client.NodeTalk.Response.AckType.valueOf(acktype_);
        return result == null ? org.nodewox.client.NodeTalk.Response.AckType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .thinese.Response.AckType acktype = 1;</code>
       */
      public Builder setAcktype(org.nodewox.client.NodeTalk.Response.AckType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        acktype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .thinese.Response.AckType acktype = 1;</code>
       */
      public Builder clearAcktype() {
        
        acktype_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> params_;
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetParams() {
        if (params_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        return params_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetMutableParams() {
        onChanged();;
        if (params_ == null) {
          params_ = com.google.protobuf.MapField.newMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        if (!params_.isMutable()) {
          params_ = params_.copy();
        }
        return params_;
      }

      public int getParamsCount() {
        return internalGetParams().getMap().size();
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public boolean containsParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetParams().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParamsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParams() {
        return getParamsMap();
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getParamsMap() {
        return internalGetParams().getMap();
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getParamsOrDefault(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetParams().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getParamsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetParams().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearParams() {
        getMutableParams().clear();
        return this;
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public Builder removeParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableParams().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      getMutableParams() {
        return internalGetMutableParams().getMutableMap();
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */
      public Builder putParams(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableParams().put(key, value);
        return this;
      }
      /**
       * <pre>
       * current param values
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; params = 14;</code>
       */

      public Builder putAllParams(
          java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> values) {
        getMutableParams().putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.nodewox.client.NodeTalk.Variant> data_;
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      internalGetMutableData() {
        onChanged();;
        if (data_ == null) {
          data_ = com.google.protobuf.MapField.newMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        if (!data_.isMutable()) {
          data_ = data_.copy();
        }
        return data_;
      }

      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public boolean containsData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getData() {
        return getDataMap();
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getDataOrDefault(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public org.nodewox.client.NodeTalk.Variant getDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearData() {
        getMutableData().clear();
        return this;
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public Builder removeData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableData().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant>
      getMutableData() {
        return internalGetMutableData().getMutableMap();
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */
      public Builder putData(
          java.lang.String key,
          org.nodewox.client.NodeTalk.Variant value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableData().put(key, value);
        return this;
      }
      /**
       * <pre>
       * extra data
       * </pre>
       *
       * <code>map&lt;string, .thinese.Variant&gt; data = 15;</code>
       */

      public Builder putAllData(
          java.util.Map<java.lang.String, org.nodewox.client.NodeTalk.Variant> values) {
        getMutableData().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:thinese.Response)
    }

    // @@protoc_insertion_point(class_scope:thinese.Response)
    private static final org.nodewox.client.NodeTalk.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.nodewox.client.NodeTalk.Response();
    }

    public static org.nodewox.client.NodeTalk.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public org.nodewox.client.NodeTalk.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Variant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Variant_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Pair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Pair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_VariantArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_VariantArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_StrArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_StrArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_IntArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_IntArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_NumArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_NumArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_BoolArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_BoolArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_PairArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_PairArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Packet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Packet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Request_ParamsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Request_ParamsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Request_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Request_DataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Response_ParamsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Response_ParamsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_thinese_Response_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_thinese_Response_DataEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntalk.proto\022\007thinese\"\206\001\n\007Variant\022\021\n\007int" +
      "_val\030\001 \001(\003H\000\022\021\n\007num_val\030\002 \001(\001H\000\022\022\n\010bool_" +
      "val\030\003 \001(\010H\000\022\021\n\007bin_val\030\004 \001(\014H\000\022\021\n\007str_va" +
      "l\030\005 \001(\tH\000\022\022\n\010time_val\030\006 \001(\003H\000B\007\n\005value\"4" +
      "\n\004Pair\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.thi" +
      "nese.Variant\"/\n\014VariantArray\022\037\n\005value\030\001 " +
      "\003(\0132\020.thinese.Variant\"\031\n\010StrArray\022\r\n\005val" +
      "ue\030\001 \003(\t\"\031\n\010IntArray\022\r\n\005value\030\001 \003(\003\"\031\n\010N" +
      "umArray\022\r\n\005value\030\001 \003(\001\"\032\n\tBoolArray\022\r\n\005v" +
      "alue\030\001 \003(\010\")\n\tPairArray\022\034\n\005value\030\001 \003(\0132\r",
      ".thinese.Pair\"\323\002\n\006Packet\022\013\n\003src\030\001 \001(\r\022\013\n" +
      "\003gid\030\002 \001(\r\022#\n\007var_val\030\005 \001(\0132\020.thinese.Va" +
      "riantH\000\022&\n\tint_array\030\006 \001(\0132\021.thinese.Int" +
      "ArrayH\000\022&\n\tnum_array\030\007 \001(\0132\021.thinese.Num" +
      "ArrayH\000\022&\n\tstr_array\030\010 \001(\0132\021.thinese.Str" +
      "ArrayH\000\022(\n\nbool_array\030\t \001(\0132\022.thinese.Bo" +
      "olArrayH\000\022*\n\tvar_array\030\n \001(\0132\025.thinese.V" +
      "ariantArrayH\000\022(\n\npair_array\030\013 \001(\0132\022.thin" +
      "ese.PairArrayH\000B\006\n\004dataJ\004\010\003\020\004J\004\010\004\020\005\"\222\003\n\007" +
      "Request\022+\n\006action\030\001 \001(\0162\033.thinese.Reques",
      "t.ActionType\022\020\n\010children\030\002 \003(\r\022,\n\006params" +
      "\030\003 \003(\0132\034.thinese.Request.ParamsEntry\022(\n\004" +
      "data\030\004 \003(\0132\032.thinese.Request.DataEntry\032?" +
      "\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(" +
      "\0132\020.thinese.Variant:\0028\001\032=\n\tDataEntry\022\013\n\003" +
      "key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.thinese.Varia" +
      "nt:\0028\001\"p\n\nActionType\022\026\n\022ACTION_CHECK_ALI" +
      "VE\020\000\022\026\n\022ACTION_CHECK_PARAM\020\001\022\034\n\030ACTION_C" +
      "HECK_PARAM_ALIVE\020\002\022\024\n\020ACTION_SET_PARAM\020\003" +
      "\"\343\002\n\010Response\022*\n\007acktype\030\001 \001(\0162\031.thinese",
      ".Response.AckType\022-\n\006params\030\016 \003(\0132\035.thin" +
      "ese.Response.ParamsEntry\022)\n\004data\030\017 \003(\0132\033" +
      ".thinese.Response.DataEntry\032?\n\013ParamsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.thinese" +
      ".Variant:\0028\001\032=\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\037" +
      "\n\005value\030\002 \001(\0132\020.thinese.Variant:\0028\001\"K\n\007A" +
      "ckType\022\n\n\006ACK_OK\020\000\022\014\n\010ACK_WARN\020\001\022\013\n\007ACK_" +
      "ERR\020\002\022\014\n\010ACK_DENY\020\003\022\013\n\007ACK_BYE\020\017J\004\010\002\020\016B\036" +
      "\n\022org.nodewox.clientB\010NodeTalkb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_thinese_Variant_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_thinese_Variant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Variant_descriptor,
        new java.lang.String[] { "IntVal", "NumVal", "BoolVal", "BinVal", "StrVal", "TimeVal", "Value", });
    internal_static_thinese_Pair_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_thinese_Pair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Pair_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_thinese_VariantArray_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_thinese_VariantArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_VariantArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_StrArray_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_thinese_StrArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_StrArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_IntArray_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_thinese_IntArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_IntArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_NumArray_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_thinese_NumArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_NumArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_BoolArray_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_thinese_BoolArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_BoolArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_PairArray_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_thinese_PairArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_PairArray_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_thinese_Packet_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_thinese_Packet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Packet_descriptor,
        new java.lang.String[] { "Src", "Gid", "VarVal", "IntArray", "NumArray", "StrArray", "BoolArray", "VarArray", "PairArray", "Data", });
    internal_static_thinese_Request_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_thinese_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Request_descriptor,
        new java.lang.String[] { "Action", "Children", "Params", "Data", });
    internal_static_thinese_Request_ParamsEntry_descriptor =
      internal_static_thinese_Request_descriptor.getNestedTypes().get(0);
    internal_static_thinese_Request_ParamsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Request_ParamsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_thinese_Request_DataEntry_descriptor =
      internal_static_thinese_Request_descriptor.getNestedTypes().get(1);
    internal_static_thinese_Request_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Request_DataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_thinese_Response_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_thinese_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Response_descriptor,
        new java.lang.String[] { "Acktype", "Params", "Data", });
    internal_static_thinese_Response_ParamsEntry_descriptor =
      internal_static_thinese_Response_descriptor.getNestedTypes().get(0);
    internal_static_thinese_Response_ParamsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Response_ParamsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_thinese_Response_DataEntry_descriptor =
      internal_static_thinese_Response_descriptor.getNestedTypes().get(1);
    internal_static_thinese_Response_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_thinese_Response_DataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
